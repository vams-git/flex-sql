DECLARE
  V_STW_REQ R5ORGANIZATIONOPTIONS.OPA_DESC%TYPE;
  V_STW_TEM R5STANDWORKS.STW_CODE%TYPE;
  V_STW_CNT NUMBER;
  V_STW_CHK VARCHAR2(3);
  
  V_CHK     VARCHAR2(100);
  V_COUNT   NUMBER;
  V_FLT_CNT NUMBER;
  REC_EVENT R5EVENTS%ROWTYPE;
  REC_TASK  R5TASKS%ROWTYPE;
  REC_ODA   U5OUDACT%ROWTYPE;

  DB_ERROR  EXCEPTION;
  ERR_NOACT EXCEPTION;
  ILANG     VARCHAR2(100);
  IERRMSG   VARCHAR2(1000);
BEGIN
  SELECT * INTO REC_EVENT FROM R5EVENTS WHERE ROWID=:ROWID;
  --start DEFSTW
  --check DEFSTW org option exist
  BEGIN
    SELECT NVL(OPA_DESC, 'NO') INTO V_STW_REQ
    FROM R5ORGANIZATIONOPTIONS
    WHERE OPA_CODE = 'DEFSTW'
      AND OPA_ORG = REC_EVENT.EVT_ORG;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      V_STW_REQ :='NO';
  END;

  IF REC_EVENT.EVT_TYPE IN ('JOB', 'PPM')
    AND REC_EVENT.EVT_JOBTYPE NOT IN ('PM', 'MEC')
    AND V_STW_REQ != 'NO' THEN
    --check DEFSTW standard work order exist
    BEGIN
      SELECT NVL(STW_CODE, 'NO') INTO V_STW_TEM
      FROM R5STANDWORKS
      WHERE STW_CLASS = 'DEFSTW' AND STW_TYPE = 'SWO'
        AND NVL(STW_NOTUSED,'-') = '-'
        AND STW_ORG = REC_EVENT.EVT_ORG
        AND STW_JOBTYPE = REC_EVENT.EVT_JOBTYPE;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_STW_TEM :='NO';
    END;
    --check if activity populated
    SELECT COUNT(1) INTO V_STW_CNT
    FROM R5ACTIVITIES WHERE ACT_EVENT = REC_EVENT.EVT_CODE;

    IF REC_EVENT.EVT_STANDWORK IS NULL
      AND V_STW_TEM != 'NO' AND V_STW_CNT = 0 THEN
      O7CRACT1(REC_EVENT.EVT_CODE, NULL, V_STW_TEM, NULL,
        NULL, 8, REC_EVENT.EVT_TARGET, 'Q', NULL, NULL,
        NULL, NULL, REC_EVENT.EVT_MRC, V_STW_CHK);
    END IF;
  END IF;
  --end DEFSTW
  
  SELECT COUNT(1) INTO V_FLT_CNT FROM R5ORGANIZATION
  WHERE ORG_CODE = REC_EVENT.EVT_ORG
    AND ORG_UDFCHAR10 LIKE '%Fleet%';

  IF REC_EVENT.EVT_TYPE IN ('JOB', 'PPM')
    AND REC_EVENT.EVT_JOBTYPE IN ('RQ', 'MC', 'MEC')
    AND V_FLT_CNT = 0 THEN
    --43MD for insert 40PR for update
    IF REC_EVENT.EVT_STATUS IN ('43MD') THEN
      BEGIN
        SELECT COUNT(1) INTO V_COUNT
        FROM R5ACTIVITIES
        WHERE ACT_EVENT = REC_EVENT.EVT_CODE;
        --if there is no activity for evt.
        IF V_COUNT = 0 THEN
          --check by class
          BEGIN
            SELECT * INTO REC_ODA
            FROM U5OUDACT
            WHERE ODA_ORG = REC_EVENT.EVT_ORG
              AND ODA_CLASS = REC_EVENT.EVT_CLASS
              AND ODA_CLASS_ORG = REC_EVENT.EVT_CLASS_ORG;
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              SELECT * INTO REC_ODA
              FROM U5OUDACT
              WHERE ODA_ORG = REC_EVENT.EVT_ORG
                AND ODA_CLASS = '*'
                AND ODA_CLASS_ORG = '*';
          END;

          IF REC_ODA.ODA_AUTOACT = '+' THEN
            IF REC_ODA.ODA_TASK IS NOT NULL THEN
              SELECT * INTO REC_TASK
              FROM R5TASKS
              WHERE TSK_CODE = REC_ODA.ODA_TASK
                AND TSK_REVISION = 0;
            ELSE IF REC_ODA.ODA_TRADE IS NOT NULL THEN
                REC_TASK.TSK_CODE := NULL;
                REC_TASK.TSK_REVISION := 0;
                REC_TASK.TSK_HOURS := 1;
                REC_TASK.TSK_PERSONS := 1;
                REC_TASK.TSK_DESC := NULL;
                REC_TASK.TSK_TRADE := NVL(REC_ODA.ODA_TRADE, '*');
              END IF;
            END IF;

            INSERT INTO R5ACTIVITIES (
              ACT_EVENT, ACT_ACT, ACT_START,
              ACT_TIME, ACT_HIRE, ACT_ORDERED,
              ACT_FIXH, ACT_MINHOURS, ACT_MRC,
              ACT_TRADE, ACT_PERSONS, ACT_PROJECT,
              ACT_PROJBUD, ACT_DURATION, ACT_EST,
              ACT_REM, ACT_NT, ACT_NTRATE,
              ACT_OT, ACT_OTRATE, ACT_SPECIAL,
              ACT_COMPLETED, ACT_QTY, ACT_TASK,
              ACT_TASKREV, ACT_NOTE) 
            VALUES (
              REC_EVENT.EVT_CODE, 1, NVL(REC_EVENT.EVT_TARGET, SYSDATE),
              '1', '-', '-',
              '-', '-', REC_EVENT.EVT_MRC,
              REC_TASK.TSK_TRADE, REC_TASK.TSK_PERSONS, REC_EVENT.EVT_PROJECT,
              REC_EVENT.EVT_PROJBUD, '1', REC_TASK.TSK_HOURS,
              '0', '0', '0',
              '0', '0', '-',
              '-', 1, REC_TASK.TSK_CODE,
              REC_TASK.TSK_REVISION, REC_TASK.TSK_DESC);
            V_COUNT := 1;
          END IF; --ec_oda.oda_autoact = '+'
        END IF; --if vcount = 0
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          NULL;
      END;
    END IF; --if 43MD
    --check status and let user manually add activity when status is '40PR','65RP'
    IF REC_EVENT.EVT_STATUS IN ('40PR', '65RP') THEN
      SELECT COUNT(1) INTO V_COUNT
      FROM R5ACTIVITIES
      WHERE ACT_EVENT=REC_EVENT.EVT_CODE;
      IF V_COUNT = 0 THEN
        IERRMSG := 'This Work Order requires an activity to move to the next step of the workflow.';
        RAISE ERR_NOACT;
      END IF;
    END IF;
  END IF; --if job,ppm
EXCEPTION
  WHEN ERR_NOACT THEN
    RAISE_APPLICATION_ERROR ( -20003, 'ERR/R5EVENTS/21/I/ '||IERRMSG) ;
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR (-20003,
      'ERR/R5EVENTS/21/I/'||SUBSTR(SQLERRM, 1, 500));
END;